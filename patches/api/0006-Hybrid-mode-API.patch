From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Indhi Rousseau <contact@thekinrar.fr>
Date: Mon, 4 Nov 2019 19:42:56 +0000
Subject: [PATCH] Hybrid mode API


diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index f380a518bc444bfdfbbedf38805c7684e53a5629..22ac64ba90d518fd68d3112d8684ba067b385fd8 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -2710,6 +2710,17 @@ public final class Bukkit {
     }
     // Paper end - Folia region threading API
 
+    // Papyrus start
+    /**
+     * Gets whether the Server is in hybrid mode or not.
+     *
+     * @return true if the server is in hybrid mode, false otherwise
+     */
+    public static boolean getHybridMode() {
+        return server.getHybridMode();
+    }
+    // Papyrus end
+
     @NotNull
     public static Server.Spigot spigot() {
         return server.spigot();
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 68206cf0178c26c0f528a1e14a5fb4e9ad410369..122e27c84bbc89d0071eb8afab9e65583892757b 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -2364,4 +2364,13 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      */
     boolean isOwnedByCurrentRegion(@NotNull Entity entity);
     // Paper end - Folia region threading API
+
+    // Papyrus start
+    /**
+     * Gets whether the Server is in hybrid mode or not.
+     *
+     * @return true if the server is in hybrid mode, false otherwise
+     */
+    boolean getHybridMode();
+    // Papyrus end
 }
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 7be6790f7bbbe716ba7c3f8bf57eaccb29656f97..6d459d17635ecfa7cf326c3636fdb9bb40a399c7 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1084,8 +1084,8 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * they have seen it before because this method was called.
      * Note this method does not make the player invulnerable, which is normally expected when viewing credits.
      *
-     * @see #hasSeenWinScreen() 
-     * @see #setHasSeenWinScreen(boolean) 
+     * @see #hasSeenWinScreen()
+     * @see #setHasSeenWinScreen(boolean)
      * @see <a href="https://minecraft.fandom.com/wiki/End_Poem#Technical_details">https://minecraft.fandom.com/wiki/End_Poem#Technical_details</a>
      */
     public void showWinScreen();
@@ -2733,7 +2733,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param simulationDistance the player's new simulation distance
      */
     public void setSimulationDistance(int simulationDistance);
-    
+
     /**
      * Gets the no-ticking view distance for this player.
      * <p>
@@ -3045,6 +3045,18 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     void removeAdditionalChatCompletions(@NotNull java.util.Collection<String> completions);
     // Paper end
 
+    // Papyrus start
+    /**
+     * Returns whether this player is authenticated with the server.
+     * That is, if the player either used /login to authenticate,
+     * registered for the first time using /register,
+     * was auto-logged in (online ID or auth timeout),
+     * or was force-authenticated with the API.
+     * @return whether this player is authenticated
+     */
+    boolean isAuthenticated();
+    // Papyrus end
+
     // Spigot start
     public class Spigot extends Entity.Spigot {
 
diff --git a/src/main/java/org/bukkit/event/entity/EntityPotionEffectEvent.java b/src/main/java/org/bukkit/event/entity/EntityPotionEffectEvent.java
index c9f395064656dd0126410eb3c6e197baa450c063..67acde745bfa85f47e68c27adcce0b5bd5147245 100644
--- a/src/main/java/org/bukkit/event/entity/EntityPotionEffectEvent.java
+++ b/src/main/java/org/bukkit/event/entity/EntityPotionEffectEvent.java
@@ -213,6 +213,10 @@ public class EntityPotionEffectEvent extends EntityEvent implements Cancellable
          * When an illusion illager makes himself disappear.
          */
         ILLUSION,
+        /**
+         * When a user is requested to login or register. No event will be triggered for this cause.
+         */
+        HYBRID_AUTH,
         /**
          * When all effects are removed due to a bucket of milk.
          */
